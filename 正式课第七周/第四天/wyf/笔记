URI 是URL的超集
URL 统一资源定位符
作用：标识该资源在整个互联网上的唯一位置。
名词解释：
方案：标识

端口：指定与服务器交互的端口。如果不填写会根据方案选择端口
默认端口
请求路径：指定请求的资源路径
请求参数：针对该次请求的过滤条件

网址访问的流程
HTTP协议：
超文本传输协议
作用：负责链接并传输HTTP客户端和HTTP服务器之间的数据

事务：
http协议是一个事务，包含请求和响应两个事件。当请求和响应都完成之后，http才算完成，否则失败。

顺序是固定的 先请求后响应
请求和响应中的数据，统称为报文
请求报文：
1、起始行：作用：标识该请求基本信息 http方法 请求地址 http版本号
2、首部：作用：（附属信息）
cookie:缓存 保持登录状态
user-agent 判断是否使用手机或者电脑
3、主体（存放数据）
文件上传、注册用户

响应报文：
1、起始行（响应的基本信息）
HTTP版本号 服务器的响应状态码 状态码描述符
2、首部
date
content-length 下载资源的大小
3、响应主体

get特点：
1、html中所有的href和src以及通过地址栏访问的资源，都是get方法
2、没有请求主体
3、因为该方法没有请求主体，所以需要把参数格式为请求参数，拼接到URL后面
4、对发送的数据有大小限制（因为浏览器对URL的长度有大小限制）
5、可以被浏览器缓存（通过响应首部实现）

post方法特点：
1、有请求主体
2、没有大小限制
3、永远不会被浏览器缓存
4、数据即可以放在请求主体中，也可以放在请求参数中

HEAD特点：
1、和get特点一模一样
2、该方法即没有请求主体，也没有响应主体

delete
1、和get特点一模一样
2、响应成功的状态码为202

put特点：
1、和post特点一模一样
2、该方法有幂等性

http状态码
304缓存 需要使用2个响应首部和2个请求首部
响应首部：last-modeified 标识请求的静态资源在服务器上最后一次修改的时间
etag 实体标签，服务器会给每个静态资源上打上一个标签，只要这个静态资源已修改，那么将会生成一个新标签。
请求首部：
if-modeified-since 该静态资源上一次请求时在服务器最后一次修改的时间
if-none-match 该静态资源上一次

http版本号之间的区别 0.9 1.0 1.1 2.0
1.1和2.0的区别
1、多路复用
2、首部压缩
3、服务器推送
4、数据格式从字符串改为数据帧
segmentfault.com/a/


ajax:使用异步加载的方式去获取服务器资源
如何实现：利用浏览器提供的API（应用程序编程接口）来实现浏览器和服务器的交互。
API：只需关心调用它就可以完成相应的功能，不需要关心它内部是如何实现的。

实现任何功能考虑的第一件事就是兼容性。
处理浏览器兼容性的解决方案：
1、优雅降级 从高到低
2、渐进增强 优先保证低版本浏览器可以用
惰性函数就是将第一次计算的结果缓存起来





