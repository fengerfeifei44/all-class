次数越多 越不好 所以前端页面优化的一个黄金法则：减少http请求次数-在第一次加载页面的时候我们尽量少发送请求，发送请求越少，请求资源越小，打开速度越快
思考题：以小组为单位，搜页面优化技巧
一个网址的组成：URL
http://www.
1、传输协议
http 超文本传输协议 HTTP事物
https 更加安全的超文本传输协议 HTTP SSL
FTP：文件传输协议，一般应用于把本地资源文件上传到服务器（FTP上传）
2、域名：方便用户记忆的
.com国际域名 .cn中文域名 .org政府或者组织的官方域名 .net 非盈利性机构的域名
www.qq.com:一级域名
sprots
3、端口号：用来区分当前服务器上不同的服务的
端口号有自己的取值范围 0-65535之间；
默认端口 HTTP 80
HTTPS 443
FTP 21
4、客户端请求资源的目录和名称
5、？问号传参 客户端可以通过这种方式给服务器传递内容
6、HASH值（哈希值）：客户端把内容可以通过这种方式传递给服务器
（锚点定位）：让页面加载完成的时候快速定位到ID尾aa的位置#aa
。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
服务器端已经把资源文件（html css js png gif jpg)中的源代码返回给客户端了 客户端是如何把代码渲染成为页面的？
W3C：全世界万维网联盟，用来制定开发的标准和规范的非盈利性机构，我们的HTML和CSS以及JS为什么这样写，都是它来定义的
开发者：按照规范写代码
浏览器开发商：按照规范去渲染和解析-》浏览器的内核或者称之为渲染引擎，这个东西就是用来把我们的代码解析成为对应的图形页面的

我们写的代码只有交给浏览器解析和渲染才有自己的价值和作用，否则就是一堆看不懂的单词字母。。
JS：一门基于客户端浏览器运行的轻量级的脚本编程语言
从node诞生开始，js不仅仅可以在浏览器中运行，而且还可以在node 这个平台环境下运行
 node:不是一门语言，它只是一个平台/环境，用来渲染和解析JS代码的环境，node的渲染引擎是谷歌V8引擎（webkit）=>node浏览器

 我们在服务器上装一个node,这样的话我们就可以把JS

 一、NODE
 在node环境下执行JS，不需要考虑兼容了 应为NODE是基于v8引擎渲染和解析JS的
 优势：
    运行速度快，因为是基于V8引擎运行的
    无阻塞的IO操作，（IO：文件的输入输出操作，对文件的增删改查）提供了一些异步读取和操作文件的方法
    基于事件驱动的异步编程模式

    肯定不能，如果能的话，客户端的电脑将会受到致命的威胁
    JS在服务器端的NODE下运行，能够操作服务器上的文件
二、我们可以把JS代码在NODE环境下执行
    在WB中，我们打开一个JS文件，在JS文件中直接的执行‘run xxx.js'这样就是把这个js中的代码在NODE环境下执行了 因为WB中会默认嵌入NODE的运行环境
    -》在JS所在的命名打开DOS命令（shift+鼠标右键（在此处代开命令窗口））执行node xxx.js 这样就把JS在NODE环境下执行了
三、NODE模块
内置模块：NODE天生提供给JS使用的方法都在不同的内置模块中 常用的三个内置模块 http fs url
自定义模块 自己定义的方法都在自定义模块中都是一个单独独立的模块
           在NODE环境下，新创建的每一个JS都是一个单独独立的模块（），在A和B中各自写一个fn方法
           首先在A中通过

第三方模块 别人写好的我们来用
      NODE环境下需要使用的第三方模块都在一个网站中 https://www.npmjs.com/
      NODE环境下第三方模块的管理统一使用npm命令
      下载：
      我们想把它下载到哪个项目目录下，就在哪个项目目录下打开DOS命令，然后执行：npm install xxx(模块的名称） eg:npm install less
      卸载：npm uninstall xxx
      npm uninstall/install xxx -g 把模块安装到全局下，这样不管在哪个目录下都可以使用了，但是项目中我们一般都安装到某一个具体的项目下而不是全局
      作业：在全局下执行npm install less -g

      服务器端要做的几件事情：
      创建一个服务（监听一个端口号）—》获取到客户端需要请求的资源文件-》把客户端想要的文件的源代码获取到-》把源代码返回给客户端
 1/NODE中的内置模块
      http
      1）var server1=http.createServer([function]):创建一个服务，返回值就是创建的那个服务;
      方法中的回调函数并不是在创建服务成功后就执行了，而是需要等到，客户端（浏览器）向当前的这个服务发送请求的时候，此回调函数才会被触发执行；
      当客户端向本地80服务发送一次请求，回调函数就会被执行一次，而且不仅执行了，还给回调函数传递了两个参数值，我们一般使用request和response两个形参变量接受这个值，
      request:存储了客户端的全部请求信息
      response:存储了很多的方法，这些方法都是用来给客户端返回相关信息
           server1.listen([port][function]):给穿件的服务监听一个端口号（0-65535之间）,当监听成功后执行回调函数
      url
      URL：parse([url],true):把一个URL中的每一部分都分别解析
      fs
      就是在NODE环境下进行的IO操作的模块，这个模块中提供了很多的方法，供我们队服务器上的文件进行增删改查
      fs.readFileSync（[pathname],[encode 'utf-8']）:同步读取某一个文件中的内容,读取出来的内容都是字符串格式的
      fs.readFile：异步读取

      fs.writeFileSync([pathname],[content][encode]):覆盖式写入，写入的内容都是字符串格式的

2、问题 我在本地通过相关的JS代码创建了一个80服务，如何向这个服务发送请求呢？
 1）在本地的浏览器的地址栏中输入：http://localhost：80/index.html...
 2)在本地浏览器的地址栏中输入http://本机IP：80/index.html..

 如何查看自己电脑的IP地址：
 在DOS窗口输入 ipconfig 即可
 如果我们链接的是同一个wifi,说明我们在同一个局域网中，这样大家就可以互相访问其他人的服务了（http://别人的IP：别人的端口/xxx.html...)需要别人把自己电脑的防火墙关掉


