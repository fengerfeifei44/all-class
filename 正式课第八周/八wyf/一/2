css2所有的效果都是即使效果
css3过渡动画=transition
    语法：
    特征：1、只有两种状态，一个是起始状态，另一个是结束状态
          2、不是立马执行，需要有出发条件 可以通过
  transition 细分属性
  transiton-property 过渡属性 默认值是all
         transition-duration 动画运行的时间
         transiton-timing-function 动画运行的速度
         ease(默认值) linear ease-in ease-out ease-in-out
         transition-delay 延迟时间

         复合写法
         transition：width 1s linear 1s;
         transition：width 1s linear 1s,height 1s linear 1s;
         如果仅仅是属性名不一样，其他的属性值都一样
         transiton:all 1s ease 1s;
         transition:1s

         做PC端项目时，为了兼容各个浏览器，需要写如下前缀的写法

         变形属性 transform 旋转 倾斜 缩放 平移 正负确定方形
         transform:rotate(45deg) 正-》顺时针 负-逆时针
         transform：scale(1,1)默认值1 》1放大 <1缩小 水平方向缩放 垂直方向缩放
         transform:skew(15deg,30deg)
          第一个参数：正-水平往左 负-水平往右
          第二个参数：正-垂直往下 负-垂直往上
          transform:translate(tx.ty)tx:
          正-右 ty:正-下 负-上
          tx,ty默认值都是0；
          transform-origin 发生变形时的基准点默认情况下是元素的中心点
          rotate（旋转）,scale（缩放）,skew（倾斜） 可以改变translate（平移）

          变形的方法可以一起使用，但是注意先后顺序，一旦和translate一起结合时，一般情况下（如果要保证变形的基准点不发生改变）translate放最后


          animation 帧动画
          刚好弥补了过渡动画的缺陷
          特征：1 可以设置多种状态，可以制作复杂的动画效果
                2 不需要出发条件，立马执行
          步骤：1、通过@keyframes 声明动画的运动轨迹
                @-webkit-keyframes 动画名{
                  0%{ 动画运行时间的百分比
                  }
                  50%{
                  }
                }
                2、通过animation调用声明的帧动画
                animation-name 动画名称 必写
                animation-duration 执行时间 必写
                animation-timing-function 动画运行的速度 ease
                animation-delay 延迟时间
                animation-iteration-count 执行的次数 1|infinite
                animation-direction：normal reverse（反方向）alternate（交替） alternate-reverse（反方向）
                animation-play-state：动画运行的状态 running paused(停止)
                animation-fill-mode 动画结束后的状态 node|backwards()|forwards(停留在最后一针的位置)|both（根据方向，可能停留在第一针或者最后一针）

                animation：move 1s 1 both
  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     3D效果
      如果想要实现3D效果
             perspective：2000px 景深 近大远小效果 一般设置在800px-2000px(用户到z轴的距离)  作用在祖先标签 包含父标签
             transform：perspective（2000px）直接作用在变形元素上
              transform-style:flat|preserve-3d  作用在变形元素的父标签上

      transform:translate3d()

      缩放 transform：scale3d（sx,sy,sz）
           transform：scaleX（）
           transform：scaleY（）
           transform：scaleZ（）不能单独使用
      翻转
                 transform：rotate3d（rx,ry,sz,a）
                 transform：rotateX（）
                 transform：rotateY（）
                 transform：rotateZ（）